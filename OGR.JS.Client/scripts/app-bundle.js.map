{"version":3,"sources":["src/app.ts","src/environment.ts","src/golomb.ts","src/main.ts","src/resources/index.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { Golomb, GolombRuler } from \"./golomb\";\r\n// import { createWorker, ITypedWorker } from 'typed-web-workers'\r\nimport * as fingerprint from 'fingerprintjs2';\r\n\r\nexport class App {\r\n  message = 'Hello World!';\r\n\r\n  attached(): void {\r\n        this.message = \"cores: \" + window.navigator.hardwareConcurrency;\r\n\r\n    // let typedWorker: ITypedWorker<number, number> = createWorker(this.workFn, (n : number) => console.log(n));\r\n\r\n    // typedWorker.postMessage(45);\r\n\r\n    // let golomb = new GolombRuler(8, [0, 1, 3, 9, 15]);\r\n\r\n    console.log(\"start: \" + new Date());\r\n\r\n    let golomb = new GolombRuler(11, 90);\r\n    // let rulers = golomb.exhaust([0, 1, 3]);      \r\n    // console.log(\"-----\");\r\n    // rulers.forEach(r => console.log(golomb.print(r)), this);\r\n\r\n    // let nextstub = golomb.nextStub(3, [0, 10, 11]);\r\n    // if (nextstub != null)\r\n    //   console.log(golomb.print(nextstub));\r\n\r\n    // nextstub = golomb.nextStub(3, nextstub);\r\n    // if (nextstub != null)\r\n    //   console.log(golomb.print(nextstub));\r\n\r\n    // nextstub = golomb.nextStub(3, nextstub);\r\n    // if (nextstub != null)\r\n    //   console.log(golomb.print(nextstub));\r\n\r\n    // nextstub = golomb.nextStub(3, nextstub);\r\n    // if (nextstub != null)\r\n    //   console.log(golomb.print(nextstub));\r\n\r\n    // nextstub = golomb.nextStub(3, nextstub);\r\n    // console.log(golomb.print(nextstub));\r\n\r\n    // nextstub = golomb.nextStub(3, nextstub);\r\n    // console.log(golomb.print(nextstub));\r\n\r\n    // nextstub = golomb.nextStub(3, nextstub);\r\n    // console.log(golomb.print(nextstub));\r\n\r\n    // let nextstub = golomb.firstStub(3);\r\n\r\n    // do {      \r\n      \r\n      \r\n    //   if (nextstub != null) {\r\n    //     console.log(\"STUB: \" + golomb.print(nextstub));\r\n    //     let rulers = golomb.exhaust(nextstub);\r\n    //     // console.log(\"S-----\");\r\n    //     rulers.forEach(r => console.log(golomb.print(r)), this);\r\n    //     console.log(\"F-----\");\r\n    //   }\r\n\r\n    //   nextstub = golomb.nextStub(3, nextstub);\r\n    // }\r\n    // while (nextstub != null);\r\n\r\n    // this.message = \"done\";\r\n    console.log(\"finished: \" + new Date());\r\n\r\n    // this.message = \"done \" + Golomb.count;\r\n  }\r\n\r\n  // workFn(input: number, callback: (count: number) => void): void {\r\n  //   // let golomb = new Golomb();\r\n\r\n  //   // callback(golomb.generate(7, 50));\r\n\r\n  //   callback(45);\r\n  // }\r\n}\r\n","export default {\n  debug: true,\n  testing: true\n};\n","export class Golomb {\r\n\r\n\r\n}\r\n\r\nexport class GolombRuler {\r\n    markers: number[] = [];\r\n    distances: number[] = [];\r\n\r\n    constructor(public order: number, private maxSearchLength?: number) {\r\n\r\n    }\r\n\r\n    public firstStub(length: number): number[] {\r\n        this.markers = [0];\r\n        this.distances = [];\r\n\r\n        while (this.markers.length < length)\r\n            this.addMarker();\r\n\r\n        return this.markers.map(x => x);\r\n    }\r\n\r\n    public nextStub(length: number, prevStub: number[] = [0]): number[] {\r\n        this.markers = [];\r\n        this.distances = [];\r\n\r\n        prevStub.forEach(x => this.markers.push(x), this);\r\n\r\n        this.calculateDistances();\r\n\r\n        let adjustPositionCur = prevStub.length - 1;\r\n        let adjustPositionMin = length - 1;\r\n\r\n        let halfOrder = Math.ceil(this.order / 2) - 1;\r\n        let halfMax = Math.ceil(this.maxSearchLength / 2);\r\n\r\n        let results: number[] = [];\r\n        let cycles = 0;\r\n\r\n        do {\r\n            let prevDist = this.clearMarkers(adjustPositionCur);\r\n            this.addMarker(prevDist + 1);\r\n\r\n            if (adjustPositionCur <= halfOrder && this.length() >= halfMax)\r\n                adjustPositionCur--;\r\n\r\n            while (this.markers.length < length) {\r\n                this.addMarker();\r\n                adjustPositionCur++;\r\n\r\n                if (adjustPositionCur <= halfOrder && this.length() >= halfMax) {\r\n                    adjustPositionCur--;\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n        while (adjustPositionCur != adjustPositionMin && adjustPositionCur > 0);\r\n\r\n        if (adjustPositionCur == 0)\r\n            return null;\r\n\r\n        return this.markers.map(x => x);\r\n    }\r\n\r\n    public exhaust(stub: number[] = [0]): number[][] {\r\n        this.markers = [];\r\n        this.distances = [];\r\n\r\n        stub.forEach(x => this.markers.push(x), this);\r\n\r\n        this.calculateDistances();\r\n\r\n        for (let i = this.markers.length - 1; i < this.order - 1; i++)\r\n            this.addMarker();\r\n\r\n        let shortestLength = this.length();\r\n\r\n        if (!this.maxSearchLength || this.maxSearchLength > shortestLength)\r\n            this.maxSearchLength = shortestLength;\r\n\r\n        let adjustPositionCur = this.order - 2;\r\n        let adjustPositionMin = stub.length - 1;\r\n\r\n        let halfOrder = Math.ceil(this.order / 2) - 1;\r\n        let halfMax = Math.ceil(this.maxSearchLength / 2);\r\n\r\n        let results: number[][] = [];\r\n        results.push(this.markers.map(x => x));\r\n\r\n        let cycles = 0;\r\n\r\n        do {\r\n            let prevDist = this.clearMarkers(adjustPositionCur);\r\n            this.addMarker(prevDist + 1);\r\n\r\n            while (this.length() < this.maxSearchLength && this.markers.length < this.order) {\r\n                if (adjustPositionCur <= halfOrder && this.length() >= halfMax) {\r\n                    adjustPositionCur--;\r\n                    break;\r\n                }\r\n\r\n                this.addMarker();\r\n                adjustPositionCur++;\r\n            }\r\n\r\n            if (this.markers.length == this.order && this.length() <= shortestLength) {\r\n\r\n                if (this.length() < shortestLength)\r\n                    results = [];\r\n\r\n                results.push(this.markers.map(x => x));\r\n\r\n                shortestLength = this.length();\r\n\r\n                if (this.maxSearchLength > shortestLength) {\r\n                    this.maxSearchLength = shortestLength;\r\n                    halfMax = Math.ceil(this.maxSearchLength / 2);\r\n                }\r\n            }\r\n\r\n            if (this.markers.length == adjustPositionCur + 1)\r\n                adjustPositionCur--;\r\n\r\n            // console.log(this.print(this.markers));\r\n\r\n            cycles++;\r\n        }\r\n        while (adjustPositionCur > adjustPositionMin);\r\n\r\n        results.push([cycles]);\r\n\r\n        return results;\r\n    }\r\n\r\n    public find(stopAtOrder?: number): number[][] {\r\n        let shortestLength = this.length();\r\n        // console.log(this.print(this.markers));\r\n\r\n        if (!this.maxSearchLength || this.maxSearchLength > shortestLength)\r\n            this.maxSearchLength = shortestLength;\r\n\r\n        if (!stopAtOrder)\r\n            stopAtOrder = this.order;\r\n\r\n        let adjustPositionCur = this.order - 2;\r\n        let adjustPositionMin = 0; // this.stub.length - 1;\r\n\r\n        let halfOrder = Math.ceil(this.order / 2) - 1;\r\n        let halfMax = Math.ceil(this.maxSearchLength / 2);\r\n\r\n        let results: number[][] = [];\r\n        results.push(this.markers.map(x => x));\r\n\r\n        let cycles = 0;\r\n\r\n        do {\r\n            let prevDist = this.clearMarkers(adjustPositionCur);\r\n            this.addMarker(prevDist + 1);\r\n\r\n            while (this.markers.length < stopAtOrder && this.length() < this.maxSearchLength) {\r\n                if (adjustPositionCur <= halfOrder && this.length() >= halfMax) {\r\n                    adjustPositionCur--;\r\n                    break;\r\n                }\r\n\r\n                this.addMarker();\r\n                adjustPositionCur++;\r\n            }\r\n\r\n            if (stopAtOrder != this.order && cycles == 3) {\r\n                if (this.markers.length == stopAtOrder) {\r\n                    results = [];\r\n                    results.push(this.markers.map(x => x));\r\n                    break;\r\n                }\r\n\r\n            }\r\n            else {\r\n                // console.log(this.print(this.markers));\r\n\r\n                if (this.markers.length == this.order && this.length() <= shortestLength) {\r\n                    // console.log(this.print(this.markers));\r\n\r\n                    if (this.length() < shortestLength)\r\n                        results = [];\r\n\r\n                    results.push(this.markers.map(x => x));\r\n\r\n                    shortestLength = this.length();\r\n\r\n                    if (this.maxSearchLength > shortestLength) {\r\n                        this.maxSearchLength = shortestLength;\r\n                        halfMax = Math.ceil(this.maxSearchLength / 2);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // if (ruler.markers.length > 5 && \r\n            //     ruler.markers[1] == 1 && \r\n            //     ruler.markers[2] == 5 && \r\n            //     ruler.markers[3] == 12 && \r\n            //     ruler.markers[4] == 22\r\n            //     && ruler.markers[5] > 44) \r\n            //      {\r\n            //     let xc = \"sdf\";\r\n            // }\r\n\r\n            if (this.markers.length == adjustPositionCur + 1)\r\n                adjustPositionCur--;\r\n\r\n            cycles++;\r\n        }\r\n        while (adjustPositionCur > adjustPositionMin);\r\n        // while (this.count < 90000000 && adjustPosition > 0);\r\n\r\n        results.push([cycles]);\r\n\r\n        return results;\r\n    }\r\n\r\n    public print(markers: number[]): string {\r\n        return `markers: ${markers.map(x => x + \"\")}`; // distances: ${this.distances.map(x => x + \" \")}`;\r\n    }\r\n\r\n    private length(): number {\r\n        return this.markers[this.markers.length - 1];\r\n    }\r\n\r\n    private addMarker(minDistance: number = 1): void {\r\n        let newDistance = this.smallestValidDistance(minDistance);\r\n        this.markers.push(this.markers[this.markers.length - 1] + newDistance);\r\n        this.calculateDistances();\r\n    }\r\n\r\n    private removeMarkers(): void {\r\n        this.clearMarkers(this.markers.length - 2);\r\n    }\r\n\r\n    private clearMarkers(after: number = 0): number {\r\n        this.markers.splice(after + 1);\r\n        let curDistance = this.markers[this.markers.length - 1] - this.markers[this.markers.length - 2];\r\n        this.markers.splice(after);\r\n        this.calculateDistances();\r\n        return curDistance;\r\n    }\r\n\r\n    private progressMarker(curDistance: number): void {\r\n        // let curDistance = this.markers[this.markers.length - 1] - this.markers[this.markers.length - 2];\r\n\r\n        // this.removeMarker();\r\n\r\n        let newDistance = this.smallestValidDistance(curDistance + 1);\r\n        this.markers[this.markers.length - 1] = this.markers[this.markers.length - 2] + newDistance;\r\n        this.calculateDistances();\r\n    }\r\n\r\n    private smallestValidDistance(minDistance: number = 1): number {\r\n        let i = minDistance;\r\n\r\n        let marker = this.markers[this.markers.length - 1] + minDistance;\r\n\r\n        do {\r\n            let newDists = this.newDistancesByMarker(marker);\r\n\r\n            if (!newDists.some(x => this.distances.find(y => y === x) != null))\r\n                return i++;\r\n\r\n            i++;\r\n            marker++;\r\n        }\r\n        while (true);\r\n    }\r\n\r\n    private newDistancesByMarker(marker: number): number[] {\r\n        return this.markers.map(x => marker - x);\r\n    }\r\n\r\n    private calculateDistances(): void {\r\n        this.distances = [];\r\n\r\n        for (var i = 0; i < this.markers.length - 1; i++)\r\n            for (var j = i + 1; j < this.markers.length; j++)\r\n                this.distances.push(this.markers[j] - this.markers[i]);\r\n\r\n        // console.log(print());\r\n    }\r\n\r\n\r\n}","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}